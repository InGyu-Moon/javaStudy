스프링 MVC 1편 - 백엔드 웹 개발 핵심 기술
섹션 4 - MVC 프레임워크 만들기


서블릿이란?

서블릿의 쓰레드풀

1. @webServlet 어노테이션으로 서블릿을 등록해주면, @ServletComponentScan으로 서블릿이 서블릿 컨테이너에 자동 등록 된다. (싱글톤으로 서블릿 객체를 생성하고 관리한다.)
2. HTTP 요청이 들어오면, urlpatterns과 매칭되는 서블릿 객체를 찾아 호출한다.
3. 호출된 서블릿 객체는 request 객체를 개발자가 사용하기 쉽게 변환하고(여기서 또 어떤 메서드가 실행되고)
4. service() 메서드를 호출한다. 여기에 원하는 request, response 값을 조작할 수 있다.

서블릿의 service 메서드를 구현 해서 사용 -> 뷰를 출력하는게 너무 불편하다
JSP 탄셍 -> JSP에 비즈니스 로직과 뷰 코드가 같이 있다 -> SRP(단일책임원칙) 위배, 유지보수가 힘듬
MVC 1 탄생 -> 모델,뷰,컨트롤러
컨트롤러: HTTP 요청을 받아서 파라미터 검증, 비즈니스 로직 실행, 뷰에 전달할 데이터를 조회해서 모델에 담는다.
모델: (뷰와 컨트롤러 사이에서 데이터를 주고 받기 위한 DTO) 뷰에 출력할 데이터를 담아둔다, 뷰가 필요한 데이터를 모두 모델에 담아서 전달해줘서 뷰는 비즈니스 로직 이나 데이터 접근없이 화면을 렌더링 하는것에 집중할 수 있다.
뷰: 모델에 담겨있는 데이터를 사용해서 화면을 그리는 일에만 집중한다. (HTML 생성)



서블릿, JSP, MVC 차이 - https://dev-monkey-dugi.tistory.com/120
MVC1, MVC2 차이 - https://onejuny.tistory.com/entry/JavaJsp-MVC-1-MVC-2-%EC%B0%A8%EC%9D%B4-%EB%B0%8F-%EC%9E%A5%EB%8B%A8%EC%A0%90
Servlet & Spring MVC - https://www.youtube.com/watch?v=3gmOuUWPZV4


======================================================================================================================================================

1. MVC 2편 서블릿 예외처리, API 예외처리
2. 세션 저장소
3. ResponseEntity
4. 김영한 트랜잭션 강의

======================================================================================================================================================

JPA n+1 문제
https://www.youtube.com/watch?v=ni92wUkAmQI
https://velog.io/@sweet_sumin/JPA-N1-%EC%9D%B4%EC%8A%88%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B4%EA%B3%A0-%ED%95%B4%EA%B2%B0%EC%B1%85%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94

======================================================================================================================================================

JDBC,JPA,mybatise 비교
https://sowon-dev.github.io/2021/03/22/210323jpaVSjdbc/
https://thefif19wlsvy.tistory.com/249
https://backend-jaamong.tistory.com/24
https://victorydntmd.tistory.com/195


Transaction 동작 원리
https://jeong-pro.tistory.com/228

======================================================================================================================================================





