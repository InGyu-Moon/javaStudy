1. 자바 메모리 구조 (힙,스택) (ex String)
유튜브 찾아보기

======================================================================================================================================================

String == 비교 대신 equals 사용, 메모리 관점, 주소
https://2jinishappy.tistory.com/293

new 키워드를 사용한 String Object가 생성될 때, Heap 메모리에는 항상 새로운 Object가 할당된다
반면 큰따옴표를 이용한 String Literal을 생성할 때 에는, String Pool에 존재하는 기존의 객체를 반환하고 없을 시 새로운 객체를 생성하여 재사용을 위해 String Pool에 저장한다.

String의 불변성
https://velog.io/@indongcha/String-%EA%B0%9D%EC%B2%B4%EC%9D%98-%EC%83%9D%EC%84%B1%EA%B3%BC-%EB%B6%88%EB%B3%80%EC%84%B1

Java String Pool 이란?
String pool은 HashMap 자료구조 형태이기 때문에 중복된 데이터가 저장되지 않는 특징
출처: https://aljjabaegi.tistory.com/465 [알짜배기 프로그래머:티스토리]

String, StringBuilder, StringBuffer의 차이는?
https://2jinishappy.tistory.com/259?category=936901

======================================================================================================================================================

jvm이란 무엇인가?
https://doozi0316.tistory.com/entry/1%EC%A3%BC%EC%B0%A8-JVM%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%9E%90%EB%B0%94-%EC%BD%94%EB%93%9C%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%8B%A4%ED%96%89%ED%95%98%EB%8A%94-%EA%B2%83%EC%9D%B8%EA%B0%80

jvm은 java virtual machine

java는 os에 종속적이지 않다 -> os에 종속적인 언어
그래서 os 위에서 java를 실행시킬 무언가가 필요하고 그게 jvm이다
java 소스코드 즉 *.java를  java compiler가 *.class 라는 java bytecode로 변환하고
이를 jvm에서 os가 해석할수있는 bytecode로 변환해준다.

<그러면 OS에 종속적인 언어는 뭐가 있을까?>
c언어는 os에 종속적이다 -> 리눅스에서 작성한 코드가 윈도우에서 작동하지 않는다.
https://kevinitcoding.tistory.com/entry/%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%97%90-%EB%8C%80%ED%95%9C-%EC%99%84%EB%B2%BD-%EC%A0%95%EB%A6%AC-%EC%8B%9C%EA%B0%84%EC%9D%80-%EC%97%86%EC%A7%80%EB%A7%8C-%EB%B0%B0%EC%9A%B0%EA%B3%A0-%EC%8B%B6%EC%9D%80-%EB%8B%B9%EC%8B%A0%EC%9D%84-%EC%9C%84%ED%95%98%EC%97%AC

<JRE는 무엇인가?>
(jre? JRE는 자바 애플리케이션을 실행할 수 있도록 구성된 배포판입니다.) - 첫링크 글에 다 정리되어있음

<컵파일러, 인터프리터 차이>
https://velog.io/@jaeyunn_15/OS-Compiler-vs-Interpreter

=========================
>>> javac Test.java
=> Test.class 파일 생성

>>> java Test
=> 실행
=========================



